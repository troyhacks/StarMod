;    @title     StarBase
;    @file      platformio.ini
;    @date      20240411
;    @repo      https://github.com/ewowi/StarBase, submit changes to this file as PRs to ewowi/StarBase
;    @Authors   https://github.com/ewowi/StarBase/commits/main
;    @Copyright © 2024 Github StarBase Commit Authors
;    @license   GNU GENERAL PUBLIC LICENSE Version 3, 29 June 2007
;    @license   For non GPL-v3 usage, commercial licenses must be purchased. Contact moonmodules@icloud.com



[ESPAsyncWebServer]
build_flags = 
  -D CONFIG_ASYNC_TCP_USE_WDT=0 ;why? tbd: experiment without
  -D WS_MAX_QUEUED_MESSAGES=64
  -D CONFIG_ASYNC_TCP_RUNNING_CORE=1 ;tbd experiment without
lib_deps =
  ; https://github.com/pbolduc/AsyncTCP.git @ 1.2.0 ; WLEDMM this must be first in the list, otherwise Aircoookie/ESPAsyncWebServer pulls in an older version of AsyncTCP !!
  ; https://github.com/ewoudwijma/ESPAsyncWebServer.git#v2.0.7
  ; https://github.com/aircoookie/ESPAsyncWebServer.git @ 2.2.1
  ; https://github.com/ewowi/ESPAsyncWebServer.git ;me-no-dev + 64 + queueLength - alternative
  ; https://github.com/lost-hope/ESPAsyncWebServer.git#master ;artifx on <ip>/edit
  ; https://github.com/esphome/ESPAsyncWebServer.git @ 3.2.2
  https://github.com/MoonModules/ESPAsyncWebServer.git @ 3.2.2 ; + queueLength


;Work in progress - not compiling yet
[PsychicHttp]
build_flags = 
  -D STARBASE_USE_Psychic
lib_deps =
  ; hoeken/PsychicHttp
  https://github.com/hoeken/PsychicHttp


[STARBASE_USERMOD_E131]
build_flags = 
  -D STARBASE_USERMOD_E131
lib_deps =
    https://github.com/forkineye/ESPAsyncE131.git#v1.0.3

[STARBASE_USERMOD_HA]
build_flags = 
  -D STARBASE_USERMOD_HA
  -D ARDUINOHA_DEBUG
lib_deps =
    https://github.com/dawidchyrzynski/arduino-home-assistant.git#2.1.0

[STARBASE_USERMOD_MPU6050]
build_flags = 
  -D STARBASE_USERMOD_MPU6050
lib_deps =
  ElectronicCats/MPU6050 @ 1.3.0

;asmParser © https://github.com/hpwit/ASMParser
[STARBASE_USERMOD_LIVE]
build_flags = 
  -D STARBASE_USERMOD_LIVE
lib_deps =
  https://github.com/hpwit/ASMParser.git
; about 1% / 19KB flash

[STARBASE]
build_flags = 
  -D APP=StarBase
  -D PIOENV=$PIOENV
  -D VERSION=24062015 ; Date and time (GMT!), update at every commit!!
  -D LFS_THREADSAFE            ; enables use of semaphores in LittleFS driver
  -D STARBASE_DEVMODE
  ${ESPAsyncWebServer.build_flags} ;alternatively PsychicHttp
  ${STARBASE_USERMOD_E131.build_flags}
  ${STARBASE_USERMOD_MPU6050.build_flags}
  ; ${STARBASE_USERMOD_HA.build_flags}
  ; ${STARBASE_USERMOD_LIVE.build_flags}
lib_deps = 
  ${ESPAsyncWebServer.lib_deps} ;alternatively PsychicHttp
  https://github.com/bblanchon/ArduinoJson.git @ 7.1.0 ;#v7.0.3
  ; https://github.com/Jason2866/ESP32_Show_Info.git
  ${STARBASE_USERMOD_E131.lib_deps}
  ${STARBASE_USERMOD_MPU6050.lib_deps}
  ; ${STARBASE_USERMOD_HA.lib_deps}
  ; ${STARBASE_USERMOD_LIVE.lib_deps}




[Speed_Flags]
build_flags =
  -O2 ; optimize for performance instead of size
  ;-ffast-math ; gives a few  (2-5) percent speedup on ESP32-S3, but causes slight slowdown on classic ESP32
  -mtarget-align -free -fipa-pta ; these are very useful, too
  -fno-jump-tables -fno-tree-switch-conversion                 ; needed
  -freorder-blocks -Wwrite-strings -fstrict-volatile-bitfields ; needed
build_unflags =
  -Os ; to disable standard optimization for size

[env]
framework = arduino
monitor_speed = 115200
monitor_filters = esp32_exception_decoder
board_build.partitions = tools/WLED_ESP32_4MB_256KB_FS.csv   ; 1.8MB firmware, 256KB filesystem (esptool erase_flash needed when changing from "standard WLED" partitions)
board_build.filesystem = littlefs
board_build.f_flash = 80000000L ; use full 80MHz speed for flash (default = 40Mhz) - this is a fixed override from the board specs applicable for all env!!!
board_build.flash_mode = dio ; (dio = dual i/o; more compatible than qio = quad i/o)
build_unflags = 
  ${Speed_Flags.build_unflags}
build_flags = 
  ${Speed_Flags.build_flags}
  ${STARBASE.build_flags}
lib_deps =
  ${STARBASE.lib_deps}
extra_scripts =
  post:tools/post_build.py


[env:esp32dev]
board = esp32dev ;https://github.com/platformio/platform-espressif32/blob/develop/boards/esp32dev.json
; recommended to pin to a platform version, see https://github.com/platformio/platform-espressif32/releases
platform = espressif32@6.5.0 ;using platformio/framework-arduinoespressif32 @ ~3.20014.0 / framework-arduinoespressif32 @ 3.20014.231204 (2.0.14)
upload_speed = 1500000
build_flags = 
  ${env.build_flags}
  -D CONFIG_IDF_TARGET_ESP32=1
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (needed on "classic ESP32")


[env:pico32]
board = pico32 ;https://github.com/platformio/platform-espressif32/blob/develop/boards/pico32.json
; recommended to pin to a platform version, see https://github.com/platformio/platform-espressif32/releases
platform = espressif32@6.5.0 ;using platformio/framework-arduinoespressif32 @ ~3.20014.0 / framework-arduinoespressif32 @ 3.20014.231204 (2.0.14)
upload_speed = 230400  ; reduced speed, as a manually attached serial-to-USB Module is needed on most pico boards (flimsy cables -> not reliable connection)
build_flags = 
  ${env.build_flags}
  -D CONFIG_IDF_TARGET_ESP32=1
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (needed on "classic ESP32")


[env:lolin_d32]
board = lolin_d32 ;https://github.com/platformio/platform-espressif32/blob/develop/boards/lolin_d32.json (no differences with esp32dev)
; recommended to pin to a platform version, see https://github.com/platformio/platform-espressif32/releases
platform = espressif32@6.5.0 ;using platformio/framework-arduinoespressif32 @ ~3.20014.0 / framework-arduinoespressif32 @ 3.20014.231204 (2.0.14)
upload_speed = 1500000
build_flags = 
  ${env.build_flags}
  ; -DARDUINO_ARCH_ESP32 ; no proof of necessity yet...
  -D CONFIG_IDF_TARGET_ESP32=1
  -D ARDUINO_USB_CDC_ON_BOOT=0 ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (needed on "classic ESP32")



[env:lolin_s2_mini]
board = lolin_s2_mini ;https://github.com/platformio/platform-espressif32/blob/develop/boards/lolin_s2_mini.json
; platform = espressif32@5.3.0 ; WLED default framework version
platform = espressif32@6.3.0    ; this one behaves better for debugging
upload_speed = 256000
build_flags = 
  ${env.build_flags}
  ; -DARDUINO_ARCH_ESP32 ; no proof of necessity yet...
  -D CONFIG_IDF_TARGET_ESP32S2=1
  -D ARDUINO_USB_CDC_ON_BOOT=1 -D ARDUINO_USB_DFU_ON_BOOT=1 -D ARDUINO_USB_MSC_ON_BOOT=0 ; for debugging over USB
  ; -DARDUINO_USB_CDC_ON_BOOT=0 -DARDUINO_USB_DFU_ON_BOOT=1 -DARDUINO_USB_MSC_ON_BOOT=0 ; with serial-to-USB moddule (use in case your board hangs without USB connection)
  -D ARDUINO_USB_MODE=0        ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (mandatory on -S2)
  ; -D DEBUG=1 -D CORE_DEBUG_LEVEL=1 -D ARDUINOJSON_DEBUG=1 ; for more debug output
  -D STARBASE_LOLIN_WIFI_FIX  ; workaround for LOLIN C3/S2/S3 wifi instability. https://www.wemos.cc/en/latest/c3/c3_mini_1_0_0.html#about-wifi


[env:lolin_c3_mini]
board = lolin_c3_mini ;https://github.com/platformio/platform-espressif32/blob/develop/boards/lolin_c3_mini.json
; platform = espressif32@5.3.0 ; WLED default framework version
platform = espressif32@6.3.0    ; this one behaves better for debugging
upload_speed = 256000
build_unflags = 
  ${env.build_unflags}
  -mtarget-align
build_flags = 
  ${env.build_flags}
  ; -DARDUINO_ARCH_ESP32 ; no proof of necessity yet...
  ; -DARDUINO_ARCH_ESP32C3 ; no proof of necessity yet...
  -D CONFIG_IDF_TARGET_ESP32C3=1
  -D ARDUINO_USB_CDC_ON_BOOT=1   ; for debugging over USB
  ; -DARDUINO_USB_CDC_ON_BOOT=0 ; with serial-to-USB moddule (use in case your board hangs without USB connection)
  -D ARDUINO_USB_MODE=1        ; Make sure that the right HardwareSerial driver is picked in arduino-esp32 (mandatory on -C3)
  -D STARBASE_LOLIN_WIFI_FIX             ; activate workaround for LOLIN C3/S2/S3 wifi instability. https://www.wemos.cc/en/latest/c3/c3_mini_1_0_0.html#about-wifi
  ; -D DEBUG=1 -D CORE_DEBUG_LEVEL=1 -D ARDUINOJSON_DEBUG=1 ; for more debug output
  
; RAM:   [=         ]  14.3% (used 46732 bytes from 327680 bytes)
; Flash: [=======   ]  74.4% (used 1414876 bytes from 1900544 bytes)

; for Waveshare ESP32-S3 Mini/Zero https://www.waveshare.com/esp32-s3-zero.htm
; --> 4MB Flash, has PSRAM, memory type "qio_qspi", USB-CDC only
[env:esp32_s3_mini]
platform = espressif32@6.3.0    ; this one behaves better for debugging
board = lolin_s3_mini ;https://github.com/platformio/platform-espressif32/blob/develop/boards/lolin_s3_mini.json
upload_speed = 256000
build_flags =
  ${env.build_flags}
  -D CONFIG_IDF_TARGET_ESP32S3=1
  -D ARDUINO_USB_CDC_ON_BOOT=1 -D ARDUINO_USB_MODE=1 -D ARDUINO_USB_DFU_ON_BOOT=0 -D ARDUINO_USB_MSC_ON_BOOT=0 ; for debugging over USB
  ; -D DEBUG=1 -D CORE_DEBUG_LEVEL=1 -D ARDUINOJSON_DEBUG=1 ; for more debug output
  ; -DSTARBASE_LOLIN_WIFI_FIX  ; I don't trust the tiny ceramic antenna - use workaround for LOLIN C3/S2/S3 wifi instability. https://www.wemos.cc/en/latest/c3/c3_mini_1_0_0.html#about-wifi







; RAM:   [==        ]  15.6% (used 51124 bytes from 327680 bytes)
; Flash: [=======   ]  68.1% (used 892033 bytes from 1310720 bytes)
; RAM:   [==        ]  24.5% (used 80240 bytes from 327680 bytes)
; Flash: [========= ]  92.4% (used 1210894 bytes from 1310720 bytes)
; after WLED_ESP32_4MB_256KB_FS:
; RAM:   [==        ]  24.5% (used 80240 bytes from 327680 bytes)
; Flash: [======    ]  63.7% (used 1210894 bytes from 1900544 bytes)
; 20240128
; RAM:   [==        ]  16.8% (used 54916 bytes from 327680 bytes)
; Flash: [=======   ]  68.6% (used 1304529 bytes from 1900544 bytes)



















; Compiler warnings E131:

; In file included from .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.c:7:
; .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.h:50:10: warning: #warning "This library only fully supports AVR and ESP8266 Boards." [-Wcpp]
;          #warning "This library only fully supports AVR and ESP8266 Boards."
;           ^~~~~~~
; .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.h:51:10: warning: #warning "Operations on the buffer in ISRs are not safe!" [-Wcpp]
;          #warning "Operations on the buffer in ISRs are not safe!"
; In file included from .pio/libdeps/esp32dev/ESPAsyncE131/ESPAsyncE131.h:37,
;                  from .pio/libdeps/esp32dev/ESPAsyncE131/ESPAsyncE131.cpp:20:
; .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.h:50:10: warning: #warning "This library only fully supports AVR and ESP8266 Boards." [-Wcpp]
;          #warning "This library only fully supports AVR and ESP8266 Boards."
;           ^~~~~~~
; .pio/libdeps/esp32dev/ESPAsyncE131/RingBuf.h:51:10: warning: #warning "Operations on the buffer in ISRs are not safe!" [-Wcpp]
;          #warning "Operations on the buffer in ISRs are not safe!"
;           ^~~~~~~



; Compiler warnings HA:

; In file included from .pio/libdeps/esp32dev/home-assistant-integration/src/device-types/HAFan.h:5,
;                  from .pio/libdeps/esp32dev/home-assistant-integration/src/ArduinoHA.h:12,
;                  from src/User/UserModHA.h:12,
;                  from src/main.cpp:31:
; .pio/libdeps/esp32dev/home-assistant-integration/src/device-types/../utils/HANumeric.h:232:18: warning: class 'HANumeric' is implicitly friends with itself
;      friend class HANumeric;





;AsyncJson.h


; In file included from src/Sys/SysModWeb.cpp:22:
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h:86:25: warning: 'DynamicJsonDocument' is deprecated: use JsonDocument instead [-Wdeprecated-declarations]
;      DynamicJsonDocument _jsonBuffer;
;                          ^~~~~~~~~~~
; In file included from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.hpp:53,
;                  from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.h:9,
;                  from src/SysModule.h:23,
;                  from src/Sys/SysModWeb.h:13,
;                  from src/Sys/SysModWeb.cpp:12:
; .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson/compatibility.hpp:125:58: note: declared here
;  class ARDUINOJSON_DEPRECATED("use JsonDocument instead") DynamicJsonDocument
;                                                           ^~~~~~~~~~~~~~~~~~~
; In file included from src/Sys/SysModWeb.cpp:22:
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h: In constructor 'AsyncJsonResponse::AsyncJsonResponse(bool, size_t)':
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h:108:47: warning: 'ArduinoJson::V703PB2::JsonArray ArduinoJson::V703PB2::JsonDocument::createNestedArray()' is deprecated: use add<JsonArray>() instead [-Wdeprecated-declarations]
;          _root = _jsonBuffer.createNestedArray();
;                                                ^
; In file included from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.hpp:33,
;                  from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.h:9,
;                  from src/SysModule.h:23,
;                  from src/Sys/SysModWeb.h:13,
;                  from src/Sys/SysModWeb.cpp:12:
; .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson/Document/JsonDocument.hpp:298:13: note: declared here
;    JsonArray createNestedArray() {
;              ^~~~~~~~~~~~~~~~~
; In file included from src/Sys/SysModWeb.cpp:22:
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h:110:48: warning: 'ArduinoJson::V703PB2::JsonObject ArduinoJson::V703PB2::JsonDocument::createNestedObject()' is deprecated: use add<JsonObject>() instead [-Wdeprecated-declarations]
;          _root = _jsonBuffer.createNestedObject();
;                                                 ^
; In file included from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.hpp:33,
;                  from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.h:9,
;                  from src/SysModule.h:23,
;                  from src/Sys/SysModWeb.h:13,
;                  from src/Sys/SysModWeb.cpp:12:
; .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson/Document/JsonDocument.hpp:318:14: note: declared here
;    JsonObject createNestedObject() {
;               ^~~~~~~~~~~~~~~~~~
; In file included from src/Sys/SysModWeb.cpp:22:
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h: In member function 'virtual void AsyncCallbackJsonWebHandler::handleRequest(AsyncWebServerRequest*)':
; .pio/libdeps/lolin_d32/ESPAsyncWebServerAircoookie/src/AsyncJson.h:218:39: warning: 'DynamicJsonDocument' is deprecated: use JsonDocument instead [-Wdeprecated-declarations]
;          DynamicJsonDocument jsonBuffer(this->maxJsonBufferSize);
;                                        ^
; In file included from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.hpp:53,
;                  from .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson.h:9,
;                  from src/SysModule.h:23,
;                  from src/Sys/SysModWeb.h:13,
;                  from src/Sys/SysModWeb.cpp:12:
; .pio/libdeps/lolin_d32/ArduinoJson/src/ArduinoJson/compatibility.hpp:125:58: note: declared here
;  class ARDUINOJSON_DEPRECATED("use JsonDocument instead") DynamicJsonDocument
;                                                           ^~~~~~~~~~~~~~~~~~~
